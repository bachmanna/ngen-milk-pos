http://unix.stackexchange.com/questions/60299/how-to-determine-which-sd-is-usb
http://askubuntu.com/questions/528690/how-to-get-list-of-all-non-removable-disk-device-names-ssd-hdd-and-sata-ide-onl

sudo apt-get install python-pip fbi python-dev python-lxml libxml2 libxml2-dev libxslt-dev libffi-dev

sudo apt-get install usbmount udev

sudo apt-get install i2c-tools

sudo apt-get install tightvncserver

abcd1234

2a4d4293

/opt/vc/bin/vcgencmd version
sudo nano /etc/rc.local
sudo nano /etc/modprobe.d/raspi-blacklist.conf
sudo update-rc.d -f nginx disable
sudo i2cdetect -y 1

snd_soc_wm8804

sudo iwlist wlan0 scan

Open the wpa-supplicant configuration file in nano:

sudo nano /etc/wpa_supplicant/wpa_supplicant.conf

Go to the bottom of the file and add the following:

network={
    ssid="The_ESSID_from_earlier"
    psk="Your_wifi_password"
}

pip install --upgrade lxml
pip install uwsgi

sudo /sbin/route add -net 0.0.0.0 gw 192.168.137.1 eth0

sudo nano /etc/resolv.conf
nameserver  208.67.222.222
nameserver 208.67.220.220

iface eth0 inet static
address 192.168.137.8
netmask 255.255.255.0
network 192.168.137.0
broadcast 192.168.137.255
gateway 192.168.137.137

python setup.py bdist_wheel && scp dist/mpos-1.0.0a1-py2-none-any.whl pi@pi:~/mpos.zip && ssh pi@pi 'unzip -oq mpos.zip' && ssh pi@pi 'chmod +x ~/mpos/web/runprod.sh'

sudo mkdir /var/log/milk-pos

:set fileformat=unix

sudo tail -f /var/log/milk-pos/uwsgi.log

ssh -tt pi@pi 'top'

ssh pi@pi 'unzip -oq mpos.zip'

chmod +x ~/mpos/web/runprod.sh


sudo nano /etc/rc.local

echo ds1307 0x68 > /sys/class/i2c-adapter/i2c-1/new_device
sudo hwclock -s

sudo nano /etc/modules

i2c-bcm2835
i2c-dev
rtc-ds1307

sudo chmod +x /etc/init.d/vncserver
sudo nano /etc/init.d/vncserver

#!/bin/sh -e
### BEGIN INIT INFO
# Provides:          vncserver
# Required-Start:    networking
# Default-Start:     3 4 5
# Default-Stop:      0 6
### END INIT INFO

PATH="$PATH:/usr/X11R6/bin/"

# The Username:Group that will run VNC
export USER="mythtv"
#${RUNAS}

# The display that VNC will use
DISPLAY="1"

# Color depth (between 8 and 32)
DEPTH="16"

# The Desktop geometry to use.
#GEOMETRY="<WIDTH>x<HEIGHT>"
#GEOMETRY="800x600"
GEOMETRY="1024x768"
#GEOMETRY="1280x1024"

# The name that the VNC Desktop will have.
NAME="my-vnc-server"

OPTIONS="-name ${NAME} -depth ${DEPTH} -geometry ${GEOMETRY} :${DISPLAY}"

. /lib/lsb/init-functions

case "$1" in
start)
log_action_begin_msg "Starting vncserver for user '${USER}' on   localhost:${DISPLAY}"
su ${USER} -c "/usr/bin/vncserver ${OPTIONS}"
;;

stop)
log_action_begin_msg "Stoping vncserver for user '${USER}' on localhost:${DISPLAY}"
su ${USER} -c "/usr/bin/vncserver -kill :${DISPLAY}"
;;

restart)
$0 stop
$0 start
;;
esac

exit 0

sudo nano /etc/udev/rules.d/10-local.rules

BUS=="usb", KERNEL=="sd?1", NAME=usbdrv, SYMLINK="/home/pi/usbdrv"

KERNEL!="sd[a-z][0-9]", GOTO="media_by_label_auto_mount_end"
# Import FS infos
IMPORT{program}="/sbin/blkid -o udev -p %N"
# Get a label if present, otherwise specify one
ENV{ID_FS_LABEL}!="", ENV{dir_name}="%E{ID_FS_LABEL}"
ENV{ID_FS_LABEL}=="", ENV{dir_name}="usbhd-%k"
# Global mount options
ACTION=="add", ENV{mount_options}="relatime"
# Filesystem-specific mount options
ACTION=="add", ENV{ID_FS_TYPE}=="vfat|ntfs", ENV{mount_options}="$env{mount_options},utf8,gid=100,umask=002"
# Mount the device
ACTION=="add", RUN+="/bin/mkdir -p /media/%E{dir_name}", RUN+="/bin/mount -o $env{mount_options} /dev/%k /media/%E{dir_name}"
# Clean up after removal
ACTION=="remove", ENV{dir_name}!="", RUN+="/bin/umount -l /media/%E{dir_name}", RUN+="/bin/rmdir /media/%E{dir_name}"
# Exit
LABEL="media_by_label_auto_mount_end"

sudo udevadm control --reload-rules


sudo /sbin/blkid -o udev -p /dev/sda1
